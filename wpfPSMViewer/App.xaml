<Application x:Class="PSMViewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PSMViewer"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:v="clr-namespace:PSMViewer.Visualizations"
             xmlns:c="clr-namespace:PSMViewer.Converters"
             xmlns:oxy="http://oxyplot.org/wpf"
             StartupUri="Windows\MainWindow.xaml">
    
    <Application.Resources>

        <c:ReloadStatusToBooleanConverter x:Key="StatusConverter" />

        <Image Source="{Binding Icon}" x:Key="Icon" x:Shared="False" />

        <Style TargetType="{x:Type MenuItem}" x:Key="ChartsMenuItemStyle">
            <Setter Property="CommandParameter" Value="{Binding}" />
            <Setter Property="Header" Value="{Binding DisplayName}" />
            <Setter Property="IsChecked" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Setter Property="Icon" Value="{StaticResource Icon}"/>
        </Style>

        <ToolBar HorizontalAlignment="Right" DataContext="{Binding Indexbased}" x:Key="IndexNavigationToolBar" x:Shared="False">

            <Button ToolTip="Previous" Command="{Binding Commands[Previous], ElementName=window}" >
                <Image Source="..\icons\resultset_previous.png"/>
            </Button>
            <Button ToolTip="Next" Command="{Binding Commands[Next], ElementName=window}">
                <Image Source="..\icons\resultset_next.png"/>
            </Button>
            <Button ToolTip="Refresh" Command="{Binding Commands[RefreshTable], ElementName=window}">
                <Image Source="..\icons\table_refresh.png"/>
            </Button>

            <Label VerticalAlignment="Center" Content="Count"/>
            <TextBox  Text="{Binding Count, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Width="100" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyUp">
                        <i:InvokeCommandAction Command="{Binding Commands[RefreshTable], ElementName=window}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="{Binding Start, Mode=OneWay}"/>
            <TextBlock Text="{Binding End, Mode=OneWay}"/>

        </ToolBar>

        <ToolBar DataContext="{Binding Timebased}" x:Key="TimeNavigationToolBar" x:Shared="False" >

            <ToolBar.Resources>
                <Style TargetType="{x:Type DatePicker}">
                    <Setter Property="SelectedDateFormat" Value="Long" />
                </Style>
                <Style TargetType="{x:Type toolkit:DateTimePicker}">
                    <Setter Property="TimeFormat" Value="SortableDateTime"/>
                </Style>
            </ToolBar.Resources>

            <Button ToolTip="Previous" Command="{Binding Commands[Previous], ElementName=window}" >
                <Image Source="..\icons\resultset_previous.png"/>
            </Button>
            <Button ToolTip="Next" Command="{Binding Commands[Next], ElementName=window}">
                <Image Source="..\icons\resultset_next.png"/>
            </Button>
            <Button ToolTip="Refresh" Command="{Binding Commands[RefreshTable], ElementName=window}">
                <Image Source="..\icons\table_refresh.png"/>
            </Button>

            <Label Content="From"/>
            <toolkit:DateTimePicker Value="{Binding Start, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ValueChanged">
                        <i:InvokeCommandAction Command="{Binding Commands[RefreshTable], ElementName=window}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </toolkit:DateTimePicker>
            <Label Content="To"/>
            <toolkit:DateTimePicker Value="{Binding End, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ValueChanged">
                        <i:InvokeCommandAction Command="{Binding Commands[RefreshTable], ElementName=window}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </toolkit:DateTimePicker>
            <Label Content="Count"/>
            <toolkit:TimeSpanUpDown Value="{Binding Count, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ValueChanged">
                        <i:InvokeCommandAction Command="{Binding Commands[RefreshTable], ElementName=window}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </toolkit:TimeSpanUpDown>

        </ToolBar>

        
        <ControlTemplate x:Key="VisualizationControlTemplate" TargetType="{x:Type v:VisualizationControl}" >
            
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                
                <Grid.ColumnDefinitions>                    
                    <ColumnDefinition Width="100*" />                    
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="100*" />
                </Grid.RowDefinitions>
                
                <StackPanel  Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Margin}" Orientation="Vertical" Visibility="{TemplateBinding TitleVisibility}">
                    <TextBlock FontSize="{TemplateBinding TitleFontSize}" FontWeight="{TemplateBinding TitleFontWeight}"  Text="{TemplateBinding Title}" TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" />
                    <TextBlock FontSize="{TemplateBinding SubTitleFontSize}" FontWeight="{TemplateBinding TitleFontWeight}" Text="{TemplateBinding SubTitle}" TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis" />
                </StackPanel>                

                <ContentPresenter Grid.Column="0" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Panel.ZIndex="1" Margin="0" />

                <Grid Grid.Column="0" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Panel.ZIndex="2" >
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="32" />
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="32" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="32" />
                        <RowDefinition Height="100*" />
                        <RowDefinition Height="32" />
                    </Grid.RowDefinitions>

                    <Grid.Resources>

                        <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
                            <ContentPresenter />
                        </ControlTemplate>

                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}" />
                            <Setter Property="Margin" Value="2.5" />
                        </Style>
                        
                    </Grid.Resources>
                    
                    <Button  Grid.Column="0" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Command="{Binding Commands[Previous]}" Visibility="{TemplateBinding HorizontalArrowsVisibility}" >
                        <Image Source="images/left.png" Width="27" Height="44" />
                    </Button>

                    <Button Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Command="{Binding Commands[Next]}" Visibility="{TemplateBinding HorizontalArrowsVisibility}" >
                        <Image Source="images/right.png" Width="27" Height="44" />    
                    </Button>

                    <Button  Grid.Column="1" Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{TemplateBinding VerticalArrowsVisibility}" Command="{Binding Commands[Up]}" >
                        <Image Source="images/up.png" Height="27" Width="44" />
                    </Button>

                    <Button Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{TemplateBinding VerticalArrowsVisibility}" Command="{Binding Commands[Down]}" >
                        <Image Source="images/down.png" Height="27" Width="44" />
                    </Button>


                </Grid>

                <toolkit:BusyIndicator Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" IsBusy="{TemplateBinding Status, Converter={StaticResource StatusConverter}}" />

            </Grid>
            
        </ControlTemplate>

    </Application.Resources>
    
</Application>
