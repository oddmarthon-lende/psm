
    <theme:Window x:Class="PSMViewer.Dialogs.KeyEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PSMViewer.Dialogs"
        xmlns:p="clr-namespace:PSMViewer"
        xmlns:m="clr-namespace:PSMViewer.Models"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:t="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:s="clr-namespace:PSMonitor.Stores;assembly=PSM"
        xmlns:theme="clr-namespace:PSMonitor.Theme;assembly=PSMonitor.Theme"
        mc:Ignorable="d"
        Title="Edit Keys" Height="600" Width="800" x:Name="_window">

    <Window.Resources>
        
        <DataTemplate x:Key="KeyItemTemplate">
            <GroupBox Header="{Binding Key.Title.Value, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch">

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" Click="Remove_Button_Click" DataContext="{Binding}" IsEnabled="{Binding CanDelete, ElementName=_window}" Content="{StaticResource DeleteIcon}" />

                    <StackPanel Grid.Column="1" Orientation="Vertical"  Margin="5" HorizontalAlignment="Stretch">

                        <GroupBox Header="Path" Margin="5" HorizontalAlignment="Stretch">

                            <ItemsControl ItemsSource="{Binding Components}" >

                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="3">
                                            <Rectangle RadiusX="3" RadiusY="3" Fill="{Binding Background, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Padding="2" Text="{Binding Name, Mode=OneWay}" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown" />
                                            </StackPanel>
                                        </Grid>                                        
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                        </GroupBox>

                        <GroupBox Header="Title behaviour" Margin="5" HorizontalAlignment="Stretch" >

                            <GroupBox.Resources>
                                <ObjectDataProvider x:Key="KeyItemTitleMode" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                                    <ObjectDataProvider.MethodParameters>
                                        <x:Type TypeName="m:KeyItemTitleMode"/>
                                    </ObjectDataProvider.MethodParameters>
                                </ObjectDataProvider>
                            </GroupBox.Resources>

                            <StackPanel Orientation="Horizontal">
                                <Label>Mode :</Label>
                                <ComboBox Width="100" ItemsSource="{Binding Source={StaticResource KeyItemTitleMode}}" SelectedValue="{Binding Key.Title.Mode}" />
                                <Label>Alias :</Label>
                                <TextBox Width="100" Text="{Binding Key.Title.Alias, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                        </GroupBox>

                        <GroupBox Header="Value Conversion" HorizontalAlignment="Stretch">

                            <StackPanel Orientation="Vertical">

                                <StackPanel Orientation="Horizontal">

                                    <StackPanel.Resources>
                                        <ObjectDataProvider x:Key="KeyValueConversionMode" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                                            <ObjectDataProvider.MethodParameters>
                                                <x:Type TypeName="s:KeyValueConversionMode"/>
                                            </ObjectDataProvider.MethodParameters>
                                        </ObjectDataProvider>

                                    </StackPanel.Resources>
                                    <Label>Mode :</Label>
                                    <ComboBox ItemsSource="{Binding Source={StaticResource KeyValueConversionMode}}" SelectedValue="{Binding Key.Conversion.Mode, Mode=TwoWay, UpdateSourceTrigger=Default}" />
                                    <Label>Value :</Label>
                                    <TextBox Width="100" Text="{Binding Key.Conversion.Value, Mode=TwoWay, UpdateSourceTrigger=Default}" />
                                </StackPanel>

                            </StackPanel>


                        </GroupBox>

                        <GroupBox Header="Color" HorizontalAlignment="Stretch">
                            <t:ColorPicker SelectedColor="{Binding Key.Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ColorMode="ColorCanvas"/>
                        </GroupBox>

                    </StackPanel>

                    <Button Grid.Column="2" ToolTip="Copy To All" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" Click="CopyToAll_Button_Click" DataContext="{Binding}" Content="{StaticResource CopyIcon}" />

                </Grid>

            </GroupBox>
        </DataTemplate>
        
    </Window.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="100*" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">

            <ToolBarTray DockPanel.Dock="Top">


                <ToolBar Visibility="{Binding TreeVisibility, ElementName=_window}" >
                    <Label>Path : </Label>
                    <TextBox Text="{Binding Key.Path, Mode=OneWay, ElementName=treeView}" MinWidth="200" Width="auto" x:Name="path_field"/>
                    <Button Height="20" Width="20" Grid.Column="1" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" Click="Add_Button_Click" IsEnabled="{Binding CanAdd, ElementName=_window}" Content="{StaticResource PlusIcon}" />
                </ToolBar>

                

            </ToolBarTray>
        </DockPanel>

        <GroupBox Header="Keys" Margin="10" Visibility="{Binding TreeVisibility, ElementName=_window}" Grid.Row="1" Grid.Column="0" >
            <p:Tree x:Name="treeView" Grid.Column="0" />
        </GroupBox>

        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Row="1" Grid.Column="1" x:Name="keys">

            <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" ScrollViewer.CanContentScroll="True">

                <ItemsControl ItemsSource="{Binding Items}" ItemTemplate="{StaticResource KeyItemTemplate}" Margin="10" VerticalAlignment="Top" HorizontalAlignment="Stretch"  DataContext="{Binding ElementName=_window}" >

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    
                </ItemsControl>

            </StackPanel>
        </ScrollViewer>

    </Grid>

</theme:Window>
