<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:PSMonitor.Theme">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="TitleBarButtonTemplate" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            
        </ControlTemplate.Resources>
        <Grid>
            <Rectangle Width="auto" Height="auto" Fill="{TemplateBinding Background}" />
            <AdornerDecorator>
                <ContentPresenter />
            </AdornerDecorator>
        </Grid>
        
    </ControlTemplate>

    <Style TargetType="{x:Type Image}" x:Key="WindowIcon">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
    </Style>

    <ControlTemplate x:Key="CustomizedWindow" TargetType="{x:Type Window}">

        <ControlTemplate.Resources>
            <theme:WindowMinimizeCommand x:Key="MinimizeCommand" />
            <theme:WindowMaximizeCommand x:Key="MaximizeCommand" />
            <theme:WindowCloseCommand x:Key="CloseCommand" />
        </ControlTemplate.Resources>

        <Border x:Name="windowBorder" BorderBrush="{DynamicResource MainColorLight}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource MainColor}">
            <Grid Background="{TemplateBinding Background}">
                <Grid>

                    <Grid.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource MainColorLight}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="{StaticResource MainColorDark}" />
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Background" Value="{StaticResource MainColorDark}" />
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="100*" />
                    </Grid.RowDefinitions>

                    <Rectangle x:Name="titleBarBackground" Fill="{DynamicResource MainColorDark}" Grid.Row="0" Height="25"
                            theme:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                            theme:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource MaximizeCommand}"
                            theme:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                            theme:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                            theme:ShowSystemMenuBehavior.RightButtonShow="true"/>

                    <StackPanel Orientation="Horizontal">

                        <Button Grid.Column="0" Template="{StaticResource TitleBarButtonTemplate}"
                                        theme:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource CloseCommand}"                                               
                                        theme:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Padding="0">
                            <Image DockPanel.Dock="Left" Style="{StaticResource WindowIcon}" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Icon}"                                         
                                        Width="16" Margin="5,0,5,0"
                                        theme:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"                                           
                                        theme:ShowSystemMenuBehavior.LeftButtonShowAt="{Binding ElementName=WindowContent}"/>
                        </Button>
                    
                        <TextBlock Text="{TemplateBinding Title}" Height="25" Padding="5" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="0"/>
                        
                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="0">

                        <StackPanel.Resources>
                           
                        </StackPanel.Resources>

                        <Button Command="{StaticResource MinimizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" HorizontalAlignment="Right" Padding="5,15,5,5" Template="{StaticResource TitleBarButtonTemplate}" Content="{StaticResource MinimizeWindowIcon}" Width="{Binding Height, ElementName=titleBarBackground}" Height="{Binding Height, ElementName=titleBarBackground}" />
                        <Button Command="{StaticResource MaximizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" HorizontalAlignment="Right" Padding="5" Template="{StaticResource TitleBarButtonTemplate}" Content="{StaticResource MaximizeWindowIcon}" Width="{Binding Height, ElementName=titleBarBackground}" Height="{Binding Height, ElementName=titleBarBackground}" />
                        <Button Command="{StaticResource CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" HorizontalAlignment="Right" Padding="5" Template="{StaticResource TitleBarButtonTemplate}" Content="{StaticResource CloseWindowIcon}" Width="{Binding Height, ElementName=titleBarBackground}" Height="{Binding Height, ElementName=titleBarBackground}" />

                    </StackPanel>

                    <AdornerDecorator Grid.Row="1">
                        <ContentPresenter x:Name="WindowContent"/>
                    </AdornerDecorator>

                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Visible" VerticalAlignment="Bottom" Grid.Row="1" Width="16" Height="16" />



                </Grid>
                
                <Thumb x:Name="ThumbTop" Height="6" Margin="14,0" VerticalAlignment="Top" Cursor="SizeNS"  Opacity="0" theme:WindowResizeBehavior.TopResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb x:Name="ThumbTopLeft" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Left" Cursor="SizeNWSE"  Opacity="0" theme:WindowResizeBehavior.TopLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb x:Name="ThumbBottom" Height="6" Margin="14,0" VerticalAlignment="Bottom" Cursor="SizeNS" Opacity="0" theme:WindowResizeBehavior.BottomResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb x:Name="ThumbTopRight" Height="6" Width="6" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="SizeNESW"  Opacity="0" theme:WindowResizeBehavior.TopRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb x:Name="ThumbRight" HorizontalAlignment="Right" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" theme:WindowResizeBehavior.RightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb x:Name="ThumbBottomRight" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Right" Cursor="SizeNWSE"  Opacity="0" theme:WindowResizeBehavior.BottomRightResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb x:Name="ThumbLeft" HorizontalAlignment="Left" Margin="0,14" Width="6" Cursor="SizeWE"  Opacity="0" theme:WindowResizeBehavior.LeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                <Thumb x:Name="ThumbBottomLeft" Height="6" Width="6" VerticalAlignment="Bottom" HorizontalAlignment="Left" Cursor="SizeNESW"  Opacity="0" theme:WindowResizeBehavior.BottomLeftResize="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            </Grid>
            
        </Border>
        
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}" TargetName="windowBorder" />
            </Trigger>
            <Trigger Property="IsActive" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource MainColorLight}" TargetName="windowBorder" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type theme:Window}" x:Key="WindowStyle">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}"/>
        <Setter Property="Background" Value="{DynamicResource MainColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{DynamicResource MainColorLight}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource MainColor}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource CustomizedWindow}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>