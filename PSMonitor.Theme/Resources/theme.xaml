<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="toolbar.xaml" />
        <ResourceDictionary Source="scrollbar.xaml" />
        <ResourceDictionary Source="menuitem.xaml" />
        <ResourceDictionary Source="datagrid.xaml" />
        <ResourceDictionary Source="groupbox.xaml" />
        <ResourceDictionary Source="textbox.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource MainColorDark}" />
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
    </Style>

    <Style TargetType="{x:Type DockPanel}">
        <Setter Property="Background" Value="{DynamicResource MainColorDark}" />
    </Style>

    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{DynamicResource MainColorDark}" />
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
        <Setter Property="Template"   Value="{StaticResource ToolBarControlTemplate}" />
    </Style>

    <Style TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="{DynamicResource MainColorDark}" />
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource MainColor}" />
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type MenuItem}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MainColor}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MainColorLight}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource MenuItemControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainColorLight}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
        <Setter Property="Background" Value="{DynamicResource MainColor}" />
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MainColor}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
        <Setter Property="Background" Value="{DynamicResource MainColorDark}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MainColorLight}" />
    </Style>


    <Style TargetType="{x:Type StatusBarItem}">
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
        <Setter Property="Background" Value="{DynamicResource AccentColor}" />
    </Style>

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
    </Style>

    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource MainColorDark}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Template" Value="{StaticResource ScrollBarTemplate}" />

    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Template" Value="{StaticResource TextBoxControlTemplate}" />
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource MainColorLight}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource GroupBoxControlTemplate}" />
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource MainColorDark}" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="1" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
                <Setter Property="Background" Value="{DynamicResource MainColorDark}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource MainColorLight}" />
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
        <Setter Property="Background" Value="{DynamicResource MainColor}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{x:Null}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource MainColorDark}" />
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{DynamicResource MainColorDark}" />
        <Setter Property="Foreground" Value="{DynamicResource TextIconColor}" />
        <Setter Property="Height" Value="0" />
        <Setter Property="Width" Value="0" />
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    
    


</ResourceDictionary>