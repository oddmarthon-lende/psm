<theme:Window x:Class="PSM.Viewer.VisualizationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PSM.Viewer"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:v="clr-namespace:PSM.Viewer.Visualizations"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:theme="http://www.bakerhughes.com/wpf/psm/theme"
        mc:Ignorable="d" Cursor="{Binding Status, Converter={StaticResource CursorConverter}}"
        Height="600" Width="800" Icon="..\icons\application_view_tile.png"  ShowInTaskbar="True" Topmost="False" x:Name="window" CanEnterFullscreen="True">

    <Window.InputBindings>


        <KeyBinding Key="F5" Command="{Binding Commands[Refresh]}"  />
        <KeyBinding Key="E" Modifiers="Ctrl" Command="{Binding Commands[Export]}"   />
        <KeyBinding Key="Delete" Modifiers="Ctrl" Command="{Binding Commands[Delete]}"  />
        <KeyBinding Key="Space" Command="{Binding Commands[ControlsVisibility]}"  />
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding Commands[Save]}"  />
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="{Binding Commands[Undo]}"  />
        <KeyBinding Key="W" Modifiers="Ctrl" Command="{Binding Commands[Properties]}"  />
        <KeyBinding Key="P" Command="{Binding Commands[Properties]}"  />


    </Window.InputBindings>

    <Grid>

        <Grid.Resources>
            <theme:FullscreenBooleanToVisibilityConverter x:Key="FBooleanToVisibilityConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="100*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Vertical" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"  Visibility="{Binding IsFullscreen, Converter={StaticResource FBooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
            
            <Menu>

                <MenuItem Header="File">
                    <MenuItem Header="Add" ItemsSource="{x:Static v:VisualizationControl.List}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding Commands[AddChart], ElementName=window}"/>
                                <Setter Property="CommandParameter" Value="{Binding}" />
                                <Setter Property="Header" Value="{Binding DisplayName}" />
                                <Setter Property="IsChecked" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Setter Property="Icon" Value="{StaticResource Icon}"/>
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Save" InputGestureText="Ctrl+S" Command="{Binding Commands[Save]}" />
                    <MenuItem Header="Export" InputGestureText="Ctrl+E" Command="{Binding Commands[Export]}" />
                    <Separator />
                    <MenuItem Header="Delete" InputGestureText="Ctrl+Delete" Command="{Binding Commands[Delete]}" />
                </MenuItem>

                <MenuItem Header="View">
                    <MenuItem Header="Toolbars">
                        <MenuItem IsCheckable="True" Header="Navigation" x:Name="view_toolbars_navigation_mi" />
                        <MenuItem IsCheckable="True" Header="Time Window" x:Name="view_toolbars_time_window_mi"/>
                        <MenuItem IsCheckable="True" Header="Variables" x:Name="view_toolbars_variables_mi"/>
                    </MenuItem>
                </MenuItem>
                
                <MenuItem Header="Edit" >

                    <MenuItem.Resources>

                        <CollectionViewSource Source="{Binding Children, ElementName=window, UpdateSourceTrigger=PropertyChanged}" x:Key="ChildrenViewSource" />

                    </MenuItem.Resources>

                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header" Value="{Binding Title}" />
                            <Setter Property="ItemsSource" Value="{Binding MenuItems}" />
                        </Style>
                    </MenuItem.ItemContainerStyle>

                    <MenuItem.ItemsSource>
                        <CompositeCollection>

                            <CollectionContainer Collection="{Binding Source={StaticResource ChildrenViewSource}}" />
                        </CompositeCollection>
                    </MenuItem.ItemsSource>

                </MenuItem>

                <MenuItem Header="Tools" >

                    <MenuItem Header="Refresh" InputGestureText="F5" Command="{Binding Commands[Refresh]}" />
                    <Separator />
                    <MenuItem Header="Capture Mouse" IsCheckable="True" IsChecked="{Binding CaptureRightClick}"  />
                    <Separator />
                    <MenuItem Header="Properties" InputGestureText="Ctrl + W, P" Command="{Binding Commands[Properties]}"  />

                </MenuItem>

            </Menu>

            <DockPanel Visibility="{Binding ControlsVisibility}" x:Name="dock">

                <ToolBarTray DockPanel.Dock="Top">

                    <ToolBar Visibility="{Binding IsChecked, ElementName=view_toolbars_variables_mi, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}" Width="Auto" x:Name="variableToolbar" >

                        <ItemsControl ItemsSource="{Binding Variables, UpdateSourceTrigger=PropertyChanged}" >

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Target="{Binding ElementName=list}" HorizontalAlignment="Left" Content="{Binding Name}" />
                                        <ComboBox ItemsSource="{Binding Keys}" x:Name="list" IsSynchronizedWithCurrentItem="True" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}" SelectionChanged="variable_combos_SelectionChanged" PreviewMouseDown="variable_combos_PreviewMouseDown" />
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                    </ToolBar>

                    <ToolBar Width="Auto" Visibility="{Binding IsChecked, ElementName=view_toolbars_navigation_mi, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}">

                        <Button ToolTip="Reset" Command="{Binding Commands[Reset], ElementName=window}" Content="{StaticResource ResetIcon}" />
                        <Button ToolTip="Previous" Command="{Binding Commands[Previous], ElementName=window}" Content="{StaticResource GoBackIcon}" />
                        <Button ToolTip="Next" Command="{Binding Commands[Next], ElementName=window}" Content="{StaticResource GoForwardIcon}"/>
                        <Button ToolTip="Refresh" Command="{Binding Commands[Refresh], ElementName=window}" Content="{StaticResource RefreshIcon}" />

                    </ToolBar>

                    <ToolBar Width="Auto" x:Name="zoomToolbar" Visibility="{Binding IsChecked, ElementName=view_toolbars_time_window_mi, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}">

                        <ToolBar.Resources>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="FontSize" Value="10" />
                            </Style>

                        </ToolBar.Resources>

                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="30S" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="1M" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="30M" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="1H" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="6H" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="24H" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="2D" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="4D" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="1W" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="2W" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="1MO" />
                        <ToggleButton Command="{Binding Commands[Zoom], ElementName=window}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Content="1Y" />

                    </ToolBar>

                </ToolBarTray>

            </DockPanel>



        </StackPanel>

        <Grid x:Name="grid" Grid.Row="1" Grid.Column="0" />
    </Grid>
</theme:Window>
